# Simple two-dimensional dynamic-programming table.
# Do not edit this file
class DynamicProgramTable:
    def __init__(self, dimension1, dimension2, ordering, fill_cell):
        self._table = [[None for j in range(dimension2)] for i in range(dimension1)]
        self._frozen = False
        self._ordering = ordering
        self._fill_cell = fill_cell

    def get(self, i,j):
        value = self._table[i][j]
        assert(value is not None), "Tried to get table cell at (%d, %d) before filling it!"%(i,j)
        return value

    def freeze(self):
        self._frozen = True

    def fill(self, **kwargs):
        for cell in self._ordering:
            self._table[cell[0]][cell[1]] = self._fill_cell(self, *cell, **kwargs)
        self.freeze() # Student code shouldn't write to the dynamic programming table after fill() is done.
